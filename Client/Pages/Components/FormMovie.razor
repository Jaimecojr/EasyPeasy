@using Peliculas.Client.Model
@using peliculas.Client.Pages.Components

<EditForm Model="Movie" OnValidSubmit="OnDataAnnotationsValidated">
    <DataAnnotationsValidator/>

    <div class="container">
        <div class="jumbotron">
            <div class="form-group">
                <div class="row">
                    <div class="col col-sm-9">
                        @* Input para ingresar el nombre de la pelicula *@
                        <InputText class="form-control" @bind-Value="@Movie.Name" placeholder="Nombre de la película">
                        </InputText>
                        <ValidationMessage For="@(()=>Movie.Name)"></ValidationMessage>
                    </div>
                    <div class="col col-sm-3">
                        @* Checkbox para definir si esta o no en cartelera *@
                        <InputCheckbox id="en_cartelera" class="form-check-input" @bind-Value="@Movie.EnCartelera">
                        </InputCheckbox>
                        <label class="form-check-label" for="en_cartelera">En cartelera</label>
                        <ValidationMessage For="@(()=>Movie.EnCartelera)"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        @* Input para ingresar el trailer *@
                        <InputText class="form-control" @bind-Value="@Movie.Trailer" placeholder="Trailer"></InputText>
                        <ValidationMessage For="@(()=>Movie.Trailer)"></ValidationMessage>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            @* Fecha de lanzamiento*@
                            <InputDate class="form-control" @bind-Value="@Movie.Premier"></InputDate>
                            <ValidationMessage For="@(()=>Movie.Premier)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            @* Sinopsis de la pelicula... descripción *@
            <div class="form-group">
                <InputTextArea class="form-control" @bind-Value="@Movie.Sinopsis" placeholder="Sinopsis de la película"></InputTextArea>
                <ValidationMessage For="@(()=>Movie.Sinopsis)"></ValidationMessage>
            </div>
            @* Selección de categorías *@
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label>Selecciona las categorías</label>
                        <div>
                            <SelectorMultiple Seleccionados="Seleccionados" NoSeleccionados="NoSeleccionados">
                            </SelectorMultiple>
                        </div>
                    </div>
                    <div class="col">
                        @* Poster => Imagen de la pelicula *@
                        <div class="form-group">
                            <ImgComponent Label="Photo" ImageSelected="ImageSelected" ImageURL="@imageURL"></ImgComponent>
                        </div>
                    </div>

                    @* <div class="form-group">
                        <label>Actores:</label>
                        <div>
                            <SelectorMultipleTypeaHead Context="actor" SearchMethod="BuscarActores" ElementosSeleccionados="ActoresSeleccionados">
                                <MyListTemplate>
                                    <img style="width: 30px" src="@actor.ActorImg" />
                                    @actor.ActorName/<input type="text" placeholder="Personaje" @bind="actor.Character"/>
                                </MyListTemplate>
                                <MyResultTemplate>
                                    <img style="width: 30px" src="@actor.ActorImg" />
                                    @actor.ActorName
                                </MyResultTemplate>
                            </SelectorMultipleTypeaHead>
                        </div>
                    </div> *@
                </div>

            </div>
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>

        </div>
    </div>
</EditForm>

@code {
    private string imageURL;
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Category> CategoriasSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Category> CategoriasNoSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Actor> ActoresSeleccionados { get; set; } = new List<Actor>();
    private string posterTemporal;
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();
    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();
    
    protected override void OnInitialized()
    {
        Seleccionados = CategoriasSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.NameCategory)).ToList();
        NoSeleccionados = CategoriasNoSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.NameCategory)).ToList();
        if (!string.IsNullOrEmpty(Movie.Poster))
        {
            imageURL = Movie.Poster;
            Console.WriteLine(imageURL);
            Movie.Poster = null;
        }
        
    }

    private void ImageSelected(string imageB64)
    {
        Movie.Poster = imageB64;
        imageURL = null;
    }


    @* private async Task<IEnumerable<Actor>> BuscarActores(string searchText)
    {
        return new List<Actor>(){
            new Actor(){Id=1, ActorName="Jim Carrey", ActorImg
            ="https://upload.wikimedia.org/wikipedia/commons/8/8b/Jim_Carrey_2008.jpg"},
            new Actor(){Id=2, ActorName="Lily Collins", ActorImg
            ="https://upload.wikimedia.org/wikipedia/commons/8/8e/Lily_Collins_2_May_2019.jpg"},
            new Actor(){Id=3, ActorName="Noah Centineo", ActorImg
            ="https://aws.glamour.mx/prod/designs/v1/assets/1170x658/264368.jpg"}
            };
    } *@

    private async Task OnDataAnnotationsValidated(){
        Movie.CategoriesMovie = Seleccionados.Select(x => new CategoryMovie{CategoryId= int.Parse(x.Key)}).ToList();
        Movie.MoviesActor = ActoresSeleccionados.Select(x =>new MovieActors{ActorId = x.Id, Character = x.Character}).ToList();
        if(!string.IsNullOrWhiteSpace(Movie.Poster)){
            posterTemporal = null;
        }
        await OnValidSubmit.InvokeAsync(null);
    }
}